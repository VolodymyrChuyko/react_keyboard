{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyup","event","setState","document","addEventListener","this","removeEventListener","className","PureComponent","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAgBEC,YAAc,SAACC,GAAD,OAA0B,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAhBrE,uDAKE,WACEI,SAASC,iBACP,QACAC,KAAKL,eARX,kCAYE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,eAb/C,oBAkBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAG,mCAC0BA,EAD1B,KAGF,kCA3BZ,GAAyBS,iB,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.73ce381c.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends PureComponent<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener(\n      'keyup',\n      this.handleKeyup,\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => this.setState({ key: event.key });\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key ? (\n            `The last pressed key is [${key}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
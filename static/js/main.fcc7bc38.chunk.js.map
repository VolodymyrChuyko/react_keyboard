{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyup","event","code","setState","document","addEventListener","this","removeEventListener","className","PureComponent","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,YAAc,SAACC,GAAD,MACG,UAAfA,EAAMC,KACF,EAAKC,SAAS,CAAEJ,IAAKE,EAAMC,OAC3B,EAAKC,SAAS,CAAEJ,IAAKE,EAAMF,OAhBnC,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAmBE,WACE,IAAQD,EAAQO,KAAKR,MAAbC,IAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAG,mCAC0BA,EAD1B,KAGF,kCA5BZ,GAAyBU,iB,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.fcc7bc38.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends PureComponent<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => (\n    event.code === 'Space'\n      ? this.setState({ key: event.code })\n      : this.setState({ key: event.key })\n  );\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key ? (\n            `The last pressed key is [${key}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}